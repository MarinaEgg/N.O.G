/* ========== APP.JS - VERSION TEMPORAIRE DE COMPATIBILIT√â ========== */
// Cette version temporaire √©vite les conflits avec chat.js existant
// √Ä terme, il faudra migrer vers une architecture modulaire compl√®te

/**
 * Classe d'application temporaire pour √©viter les conflits
 * Ne fait que des v√©rifications de base sans interferer avec chat.js
 */
class TempChatApp {
  constructor() {
    this.isInitialized = false;
    this.debugMode = false;
    
    console.log('üîß TempChatApp: Version de compatibilit√© charg√©e');
  }

  /**
   * Initialisation minimale qui ne cause pas de conflits
   */
  async init() {
    if (this.isInitialized) {
      console.warn('‚ö†Ô∏è TempChatApp d√©j√† initialis√©');
      return;
    }

    try {
      // V√©rifications de base uniquement
      await this.checkDOMElements();
      
      // Marquer comme initialis√©
      this.isInitialized = true;
      console.log('‚úÖ TempChatApp initialis√© en mode compatibilit√©');
      
    } catch (error) {
      console.error('‚ùå Erreur lors de l\'initialisation TempChatApp:', error);
    }
  }

  /**
   * V√©rifier que les √©l√©ments essentiels sont pr√©sents
   */
  async checkDOMElements() {
    const requiredElements = [
      '#message-input',
      '#send-button', 
      '#messages',
      '.conversations'
    ];

    const missingElements = [];
    
    for (const selector of requiredElements) {
      const element = document.querySelector(selector);
      if (!element) {
        missingElements.push(selector);
      }
    }

    if (missingElements.length > 0) {
      console.warn('‚ö†Ô∏è √âl√©ments DOM manquants:', missingElements);
    } else {
      console.log('‚úÖ Tous les √©l√©ments DOM essentiels sont pr√©sents');
    }
  }

  /**
   * M√©thode utilitaire pour debug
   */
  enableDebug() {
    this.debugMode = true;
    console.log('üêõ Mode debug activ√© pour TempChatApp');
  }

  /**
   * V√©rifier l'√©tat de l'application
   */
  getStatus() {
    return {
      initialized: this.isInitialized,
      debugMode: this.debugMode,
      timestamp: new Date().toISOString()
    };
  }
}

// Initialisation automatique SANS conflits
if (typeof window !== 'undefined') {
  // Attendre que le DOM soit pr√™t
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      initTempApp();
    });
  } else {
    initTempApp();
  }
}

function initTempApp() {
  // Ne cr√©er l'instance que si elle n'existe pas
  if (!window.tempChatApp) {
    window.tempChatApp = new TempChatApp();
    
    // Initialiser apr√®s un d√©lai pour laisser chat.js se charger en premier
    setTimeout(() => {
      window.tempChatApp.init();
    }, 100);
  }
}

// Export pour compatibilit√©
if (typeof module !== 'undefined' && module.exports) {
  module.exports = TempChatApp;
}
